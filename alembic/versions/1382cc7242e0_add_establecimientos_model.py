"""Add establecimientos model

Revision ID: 1382cc7242e0
Revises: 476a7d9e72da
Create Date: 2023-03-16 01:19:51.822751

"""
import csv
from pathlib import Path

import sqlalchemy as sa
from alembic import op
from sqlalchemy import orm

from app.models.especialidades import Especialidades
from app.models.services import Services

session = orm.Session(bind=op)

# revision identifiers, used by Alembic.
revision = '1382cc7242e0'
down_revision = '476a7d9e72da'
branch_labels = None
depends_on = None

LISTADO_ESPECIALIDAD_FILE = Path(__file__).parent.parent.parent / "database/listado_especialidades.csv"
LISTADO_SERVICIOS_FILE = Path(__file__).parent.parent.parent / "database/servicios.txt"


def upgrade():
    session = orm.Session(bind=op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('especialidades',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('codigo', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('resolucion', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institutions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('codigo', sa.String(length=100), nullable=False),
    sa.Column('domicilio', sa.String(length=100), nullable=False),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('long', sa.Float(), nullable=True),
    sa.Column('tipologia', sa.String(length=100), nullable=False),
    sa.Column('categoria_tipologia', sa.String(length=100), nullable=False),
    sa.Column('dependencia', sa.String(length=100), nullable=False),
    sa.Column('departamento', sa.String(length=100), nullable=False),
    sa.Column('localidad', sa.String(length=100), nullable=False),
    sa.Column('ciudad', sa.String(length=100), nullable=False),
    sa.Column('activate', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('institutions_especialidades',
    sa.Column('institutions_id', sa.Integer(), nullable=False),
    sa.Column('especialidades_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['especialidades_id'], ['especialidades.id'], ),
    sa.ForeignKeyConstraint(['institutions_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('institutions_id', 'especialidades_id')
    )
    op.create_table('institutions_services',
    sa.Column('institutions_id', sa.Integer(), nullable=False),
    sa.Column('services_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['institutions_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['services_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('institutions_id', 'services_id')
    )
    # ### end Alembic commands ###
    # migracion especialidades
    with open(LISTADO_ESPECIALIDAD_FILE) as f:
        csv_file = csv.DictReader(f)

        for line in csv_file:
            especialidad = Especialidades(codigo=line["codigo"], name=line["nombre"], resolucion=line["resolucion"])
            session.add(especialidad)

        session.commit()

    # migracion servicios
    servicios_file = LISTADO_SERVICIOS_FILE.open().read()
    services_list = servicios_file.split(";")
    for s in services_list:
        service = Services(name=s.split("-")[-1])
        session.add(service)
    session.commit()

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('institutions_services')
    op.drop_table('institutions_especialidades')
    op.drop_table('services')
    op.drop_table('institutions')
    op.drop_table('especialidades')
    # ### end Alembic commands ###
